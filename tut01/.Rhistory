setwd('D:/NUS/ChadCode/TBA2104/tut01')
getwd()
?read.csv()
knitr::opts_chunk$set(echo = TRUE)
setwd('D:/NUS/ChadCode/TBA2104/tut01')
View(college)
college <- read.csv('college.csv') # default header = F
View(college)
class(college)
View(college)
print(paste('college imported as: ', class(college)))
head(college)
?data.frame
college$X
college[[X],1:10]
college[[X]]
print(paste('show only first 10 rows: ', college[X, c(1:10)]
print(paste('show only first 10 rows: ', college['X', c(1:10)]
print(paste('show only first 10 rows: ', college['X', c(1:10)]))
print(paste('show only first 10 rows: ', college[c(1:10),'X']))
# college$X # results too long
print('college$X  results too long for page')
print(paste('show only first 10 rows: ', college[c(1:10),'X']))
college[1,]
?rownames
colnames(college)
rownames(college)
View(college)
#remove rownames
rownames(college) <- NULL
rownames(college) < college$X
#remove rownames
rownames(college) <- NULL
rownames(college) <- college$X
#remove rownames
rownames(college) <- NULL
rownames(college) <- college$X
rownames(college)
?which
?is.na()
?which
which(LETTERS == "R")
which(ll <- c(TRUE, FALSE, TRUE, NA, FALSE, FALSE, TRUE)) #> 1 3 7
names(ll) <- letters[seq(ll)]
which(ll)
which((1:12)%%2 == 0) # which are even?
which(1:10 > 3, arr.ind = TRUE)
which(is.na(college$Apps))
}
which(is.na(college$Apps))
#any NA?
print(paste('any NAs in Apps col?',which(is.na(college$Apps))))
#any NA?
print(paste('any NAs in Apps col?',as.integer(which(is.na(college$Apps)))))
?!
d
?not
#any NA?
print(paste('any NAs in Apps col?',if((which(is.na(college$Apps))) == 0))
?==
?operator
#any NA?
print(paste('any NAs in Apps col?',if((which(is.na(college$Apps))) == '0')))
#any NA?
print(paste('any NAs in Apps col?',which(is.na(college$Apps))))
?sum()
?mean
#mean
mean(college$Apps,na.rm = TRUE)
#any NA?
print(paste('any NAs in Apps col?',which(is.na(college$Apps))))
#sum up
print(paste('total applications: ', sum(college$Apps,na.rm = TRUE)))
#mean
print(paste('avg no of applications: ',mean(college$Apps,na.rm = TRUE)))
college[which(college$Apps > 5000),]
college[which(college$Apps > 5000),college$Apps]
college[which(college$Apps > 5000),]
college[which(college$Apps > 5000),2]
college[which(college$Apps > 5000),]
college[which(college$Apps > 5000),Apps]
college[which(college$Apps > 5000),]
#any NA?
print('any NAs in Apps col?')
which(is.na(college$Apps))
#sum up
print(paste('total applications: ', sum(college$Apps,na.rm = TRUE)))
#mean
print(paste('avg no of applications: ',mean(college$Apps,na.rm = TRUE)))
college[which(college$Apps > 5000),c(2)]
college[which(college$Apps > 5000),c(1)]
college[which(college$Apps > 5000),c(3)]
college[which(college$Apps > 5000),c(1,3)]
which(colnames(college) == 'Apps')
college[which(college$Apps > 5000),which(colnames(college) == 'Apps')]
college[which(college$Apps > 5000),c(which(colnames(college) == 'X'),which(colnames(college) == 'Apps'))]
college[which(college$Apps > 5000),c(1)]
ll <- NULL
?rm()
rm(ll)
college[which(college$Apps > 5000),c(which(colnames(college) == 'X'),which(colnames(college) == 'Apps'),which(colnames(college) == 'Grad.Rate'))]
mean(C5k$Grad.Rate)
C5k <- college[which(college$Apps > 5000),c(which(colnames(college) == 'X'),which(colnames(college) == 'Apps'),which(colnames(college) == 'Grad.Rate'))]
mean(C5k$Grad.Rate)
?fmt
?format
format(c(6.0, 13.1), digits = 2)
format(mean(C5k$Grad.Rate), nsmall = 3)
round(mean(C5k$Grad.Rate),3)
round(mean(C5k$Grad.Rate),5)
round(mean(C5k$Grad.Rate),4)
print('avg graduation rate for universities with more than 5,000 applications: ')
round(mean(C5k$Grad.Rate),4)
print(paste('avg graduation rate for universities with more than 5,000 applications: ', round(mean(C5k$Grad.Rate),4)))
?print
print('avg graduation rate for universities with ')
print('less ', bold = T)
print('than 5,000 applications: ', round(mean(C5kless$Grad.Rate),4))
C5kless <- college[which(college$Apps <= 5000),c(which(colnames(college) == 'X'),which(colnames(college) == 'Apps'),which(colnames(college) == 'Grad.Rate'))]
print('avg graduation rate for universities with ')
print('less ', bold = T)
print('than 5,000 applications: ', round(mean(C5kless$Grad.Rate),4))
print('avg graduation rate for universities with -less- than 5,000 applications: ', round(mean(C5kless$Grad.Rate),4))
print('avg graduation rate for universities with -less- than 5,000 applications: ', round(mean(C5kless$Grad.Rate),2))
print('avg graduation rate for universities with -less- than 5,000 applications: ', mean(C5kless$Grad.Rate))
print(paste('avg graduation rate for universities with -less- than 5,000 applications: ', mean(C5kless$Grad.Rate,4)))
rm(C5k)
C5kmore <- college[which(college$Apps > 5000),c(which(colnames(college) == 'X'),which(colnames(college) == 'Apps'),which(colnames(college) == 'Grad.Rate'))]
print(paste('avg graduation rate for universities with more than 5,000 applications: ', round(mean(C5k$Grad.Rate),4)))
C5kmore <- college[which(college$Apps > 5000),c(which(colnames(college) == 'X'),which(colnames(college) == 'Apps'),which(colnames(college) == 'Grad.Rate'))]
print(paste('avg graduation rate for universities with more than 5,000 applications: ', round(mean(C5kmore$Grad.Rate),4)))
C5kless <- college[which(college$Apps <= 5000),c(which(colnames(college) == 'X'),which(colnames(college) == 'Apps'),which(colnames(college) == 'Grad.Rate'))]
print(paste('avg graduation rate for universities with -less- than 5,000 applications: ', mean(C5kless$Grad.Rate,4)))
C5kmore <- college[which(college$Apps > 5000),c(which(colnames(college) == 'X'),which(colnames(college) == 'Apps'),which(colnames(college) == 'Grad.Rate'))]
print(paste('avg graduation rate for universities with more than 5,000 applications: ', round(mean(C5kmore$Grad.Rate),4)))
C5kless <- college[which(college$Apps <= 5000),c(which(colnames(college) == 'X'),which(colnames(college) == 'Apps'),which(colnames(college) == 'Grad.Rate'))]
print(paste('avg graduation rate for universities with -less- than 5,000 applications: ', round(mean(C5kless$Grad.Rate),4)))
?max
?max.col
max(college$F.Undergrad)
?which
?which.max
x <- c(1:4, 0:5, 11)
which.min(x)
which.max(x)
?rownames
which.max(college$F.Undergrad)
college[which.max(college$F.Undergrad),]
college[which.max(college$F.Undergrad),]
college[which.max(college$F.Undergrad),c(which(colnames(college) == 'X'),which(colnames(college) == 'F.Undergrad'))]
college[which.max(college$F.Undergrad),c(which(colnames(college) == 'X'),which(colnames(college) == 'F.Undergrad'))]
college[which.min(college$F.Undergrad),c(which(colnames(college) == 'X'),which(colnames(college) == 'F.Undergrad'))]
